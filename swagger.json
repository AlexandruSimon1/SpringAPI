{
  "swagger": "2.0",
  "info": {
    "title": "Spring API",
    "version": "1.0.0",
    "contact": {
      "name": "Arthur Simon",
      "email": "asimon@ms3-inc.com"
    },
    "license": {
      "name": "No License"
    }
  },
  "host": "localhost:8282",
  "basePath": "/",
  "tags": [
    {
      "name": "ADMINISTRATOR",
      "description": "CRUD Operations for Administrators"
    },
    {
      "name": "CHECKOUT",
      "description": "CRUD Operations for CheckOut"
    },
    {
      "name": "MENUS",
      "description": "CRUD Operations for Menu"
    },
    {
      "name": "ORDERS",
      "description": "CRUD Operations for Orders"
    },
    {
      "name": "TABLES",
      "description": "CRUD Operations for Tables"
    },
    {
      "name": "WAITER",
      "description": "CRUD Operations for Waiters"
    },
    {
      "name": "authentication-rest-controller-v-1",
      "description": "Authentication Rest Controller V 1"
    },
    {
      "name": "authorization-controller",
      "description": "Authorization Controller"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    }
  ],
  "paths": {
    "/api/v1/administrators": {
      "get": {
        "tags": [
          "ADMINISTRATOR"
        ],
        "summary": "GET ALL ADMINISTRATORS",
        "description": "\nThis operation gets all administrators",
        "operationId": "getAllAdministratorsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdminDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ADMINISTRATOR"
        ],
        "summary": "CREATE ADMINISTRATOR",
        "description": "\nThis operation creates an administrator",
        "operationId": "createAdminUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "adminDTO",
            "description": "adminDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AdminDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/administrators/{administratorId}": {
      "get": {
        "tags": [
          "ADMINISTRATOR"
        ],
        "summary": "GET ADMINISTRATOR BY ID",
        "description": "\nThis operation get an administrator by id",
        "operationId": "getAdministratorByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "administratorId",
            "in": "path",
            "description": "administratorId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ADMINISTRATOR"
        ],
        "summary": "UPDATE ADMINISTRATOR BY ID",
        "description": "\nThis operation update an administrator by id",
        "operationId": "updateAdministratorByIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "adminDTO",
            "description": "adminDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminDTO"
            }
          },
          {
            "name": "administratorId",
            "in": "path",
            "description": "administratorId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ADMINISTRATOR"
        ],
        "summary": "DELETE ADMINISTRATOR BY ID",
        "description": "\nThis operation deletes an administrator by id",
        "operationId": "deleteAdministratorByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "administratorId",
            "in": "path",
            "description": "administratorId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/AdminDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "authentication-rest-controller-v-1"
        ],
        "summary": "authenticate",
        "operationId": "authenticateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthenticationRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "authentication-rest-controller-v-1"
        ],
        "summary": "logout",
        "operationId": "logoutUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/checkout": {
      "get": {
        "tags": [
          "CHECKOUT"
        ],
        "summary": "GET ALL CHECKOUT",
        "description": "\nThis operation gets all checkout",
        "operationId": "getAllCheckOutUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckOutDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CHECKOUT"
        ],
        "summary": "CREATE CHECKOUT",
        "description": "\nThis operation creates a checkout",
        "operationId": "createCheckOutUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "checkOutDTO",
            "description": "checkOutDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckOutDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CheckOutDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/checkout/{checkoutId}": {
      "get": {
        "tags": [
          "CHECKOUT"
        ],
        "summary": "GET CHECKOUT BY ID",
        "description": "\nThis operation get a checkout by id",
        "operationId": "getCheckOutByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "checkoutId",
            "in": "path",
            "description": "checkoutId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckOutDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CHECKOUT"
        ],
        "summary": "UPDATE CHECKOUT BY ID",
        "description": "\nThis operation updates a checkout by id",
        "operationId": "updateCheckOutByIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "checkOutDTO",
            "description": "checkOutDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckOutDTO"
            }
          },
          {
            "name": "checkoutId",
            "in": "path",
            "description": "checkoutId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/CheckOutDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CHECKOUT"
        ],
        "summary": "DELETE CHECKOUT BY ID",
        "description": "\nThis operation delete a checkout by id",
        "operationId": "deleteCheckOutByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "checkoutId",
            "in": "path",
            "description": "checkoutId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/CheckOutDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/menus": {
      "get": {
        "tags": [
          "MENUS"
        ],
        "summary": "GET ALL PRODUCTS",
        "description": "\nThis operation gets all products",
        "operationId": "getAllProductsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "MENUS"
        ],
        "summary": "CREATE PRODUCT",
        "description": "\nThis operation creates a product",
        "operationId": "createProductUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "menuDTO",
            "description": "menuDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/menus/{productId}": {
      "get": {
        "tags": [
          "MENUS"
        ],
        "summary": "GET PRODUCT BY ID",
        "description": "\nThis operation get product by id",
        "operationId": "getProductByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "MENUS"
        ],
        "summary": "UPDATE PRODUCT",
        "description": "\nThis operation updates a existing product",
        "operationId": "updateProductUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "menuDTO",
            "description": "menuDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "MENUS"
        ],
        "summary": "DELETE PRODUCT BY ID",
        "description": "\nThis operation delete product by id",
        "operationId": "deleteProductByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": [
          "ORDERS"
        ],
        "summary": "GET ALL ORDERS",
        "description": "\nThis operation gets all orders",
        "operationId": "getAllOrdersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ORDERS"
        ],
        "summary": "CREATE ORDER",
        "description": "\nThis operation creates order",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "orderDTO",
            "description": "orderDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OrderDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/orders/{orderId}": {
      "get": {
        "tags": [
          "ORDERS"
        ],
        "summary": "GET ORDER BY ID",
        "description": "\nThis operation get order by id",
        "operationId": "getOrderByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ORDERS"
        ],
        "summary": "UPDATE ORDER BY ID",
        "description": "\nThis operation updates an existing order",
        "operationId": "updateOrderByIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "orderDTO",
            "description": "orderDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDTO"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/OrderDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ORDERS"
        ],
        "summary": "DELETE ORDER BY ID",
        "description": "\nThis operation deletes order by id",
        "operationId": "deleteOrderByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/OrderDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/orders/{orderId}/menus": {
      "get": {
        "tags": [
          "ORDERS"
        ],
        "summary": "GET ALL PRODUCT BY ORDER NUMBER",
        "description": "\nThis operation gets all products from order number",
        "operationId": "getAllProductByOrderIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/orders/{orderId}/menus/{removed_productId}": {
      "put": {
        "tags": [
          "ORDERS"
        ],
        "summary": "UPDATE PRODUCT BY ORDER NUMBER",
        "description": "\nThis operation updates products from existing order by order number",
        "operationId": "updateProductByOrderIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "menuDTO",
            "description": "menuDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "removed_productId",
            "in": "path",
            "description": "removed_productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/orders/{orderNumber}/menus/{removedProductId}": {
      "delete": {
        "tags": [
          "ORDERS"
        ],
        "summary": "DELETE PRODUCT BY ORDER NUMBER",
        "description": "\nThis operation deletes products from existing order by order number",
        "operationId": "deleteProductByOrderIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "description": "orderNumber",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "removedOrderId",
            "in": "path",
            "description": "removedOrderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/tables": {
      "get": {
        "tags": [
          "TABLES"
        ],
        "summary": "GET ALL TABLES",
        "description": "\nThis operation gets all tables",
        "operationId": "getAllTablesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TableDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "TABLES"
        ],
        "summary": "CREATE TABLE",
        "description": "\nThis operation creates a table",
        "operationId": "createTableUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "tableDTO",
            "description": "tableDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TableDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/tables/{tableId}": {
      "get": {
        "tags": [
          "TABLES"
        ],
        "summary": "GET TABLE BY ID",
        "description": "\nThis operation get a table by id",
        "operationId": "getTableByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "tableId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TableDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "TABLES"
        ],
        "summary": "UPDATE TABLE",
        "description": "\nThis operation updates a table by id",
        "operationId": "updateTableByIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "tableDTO",
            "description": "tableDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableDTO"
            }
          },
          {
            "name": "tableId",
            "in": "path",
            "description": "tableId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/TableDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "TABLES"
        ],
        "summary": "DELETE TABLE BY ID",
        "description": "\nThis operation deletes a table by id",
        "operationId": "deleteTableByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "tableId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/TableDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/waiters": {
      "get": {
        "tags": [
          "WAITER"
        ],
        "summary": "GET ALL WAITERS",
        "description": "\nThis operation gets all waiters",
        "operationId": "getAllWaitersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WaiterDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "WAITER"
        ],
        "summary": "CREATE A WAITER",
        "description": "\nThis operation create a new waiter",
        "operationId": "createWaiterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "waiterDTO",
            "description": "waiterDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WaiterDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WaiterDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/waiters/{waiterId}": {
      "get": {
        "tags": [
          "WAITER"
        ],
        "summary": "GET WAITER BY ID",
        "description": "\nThis operation get an waiter by id",
        "operationId": "getWaiterByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "waiterId",
            "in": "path",
            "description": "waiterId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WaiterDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WAITER"
        ],
        "summary": "UPDATE WAITER BY ID",
        "description": "\nThis operation update an existing waiter by id",
        "operationId": "updateWaiterByIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "waiterDTO",
            "description": "waiterDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WaiterDTO"
            }
          },
          {
            "name": "waiterId",
            "in": "path",
            "description": "waiterId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WaiterDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WAITER"
        ],
        "summary": "DELETE WAITER BY ID",
        "description": "\nThis operation delete an existing waiter by id",
        "operationId": "deleteWaiterByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "waiterId",
            "in": "path",
            "description": "waiterId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/WaiterDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/auth/login": {
      "get": {
        "tags": [
          "authorization-controller"
        ],
        "summary": "getLoginPage",
        "operationId": "getLoginPageUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/auth/success": {
      "get": {
        "tags": [
          "authorization-controller"
        ],
        "summary": "getSuccessPage",
        "operationId": "getSuccessPageUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AdminDTO": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AdminDTO"
    },
    "AuthenticationRequestDTO": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "AuthenticationRequestDTO"
    },
    "CheckOutDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "$ref": "#/definitions/OrderDTO"
        },
        "paymentType": {
          "type": "string"
        }
      },
      "title": "CheckOutDTO"
    },
    "MenuDTO": {
      "type": "object",
      "properties": {
        "categoryType": {
          "type": "string",
          "enum": [
            "PIZZA",
            "SALAD",
            "SOUP",
            "DESSERT",
            "BEVERAGE",
            "ALCOHOL"
          ]
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "MenuDTO"
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      },
      "title": "ModelAndView"
    },
    "OrderDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "menus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MenuDTO"
          }
        },
        "orderNumber": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "OrderDTO"
    },
    "TableDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "$ref": "#/definitions/OrderDTO"
        }
      },
      "title": "TableDTO"
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      },
      "title": "View"
    },
    "WaiterDTO": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "WaiterDTO"
    }
  }
}